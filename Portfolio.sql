-- Create Database
DROP DATABASE Portfolio
CREATE DATABASE Portfolio  
ON  PRIMARY 
( NAME = TRAINING_MCI,  
  FILENAME = 'E:\Database\Portfolio.MDF',
    SIZE = 10,  
    MAXSIZE = 50000,  
 FILEGROWTH = 5 
 )  
LOG ON  
( NAME = TRAINING_MCI_LOG,  
  FILENAME = 'E:\Database\Portfolio_LOG.LDF',
    SIZE = 5,  
    MAXSIZE = 25000,  
    FILEGROWTH = 5 
)
;
USE Portfolio

-- Create table & Import data
DROP TABLE IF EXISTS Portfolio.DBO.BANHANG
CREATE TABLE Portfolio.DBO.BANHANG
	(
	STOREDID NVARCHAR(255),
	TRANS_DATE DATE,
	SALE_NAME NVARCHAR(255),
	SALE_ID NVARCHAR(255),
	SALE_ADDRESS NVARCHAR(255),
	CUS_NAME NVARCHAR(255),
	CUS_ID NVARCHAR(255),
	RETAIL_BILL NVARCHAR(255),
	TOTAL_BILL NVARCHAR(255),
	CCY_CODE NVARCHAR(255),
	PRODCUCT_NAME NVARCHAR(255),
	UNIT_PRICE FLOAT,
	TRANS_TYPE NVARCHAR(255),
	FCY_AMT FLOAT,
	LCY_AMT FLOAT,
	COMMISSION FLOAT,
	SALE_OFF FLOAT,
	CHAMTRA FLOAT,
	MAT_DATE DATE,
	CUS_TYPE INT
	)
;
BULK INSERT Portfolio.DBO.BANHANG
FROM 'E:\Data\banhang.csv'
	WITH 
	(
	FIRSTROW = 2, 
	FIELDTERMINATOR = ',' ,
	ROWTERMINATOR = '\n',
	CODEPAGE = '65001'
	)
;
DROP TABLE IF EXISTS Portfolio..DISCOUNT
CREATE TABLE Portfolio..DISCOUNT
	(
	MUC_TOI_THIEU FLOAT,
	MUC_TOI_DA FLOAT,
	MUC_CHIET_KHAU FLOAT,
	DK_CHAM_TRA FLOAT,
	LOAI_KH FLOAT
	)

BULK INSERT Portfolio..DISCOUNT
FROM 'E:\Data\discount.txt'
	WITH 
	(
	FIRSTROW = 2, 
	FIELDTERMINATOR = ',' ,
	ROWTERMINATOR = '\n',
	CODEPAGE = '65001'
	)
;
-- Tạo ra bảng dữ liệu danh sách giao dịch trong tháng 4 năm 2019 và tháng 6 năm 2019
SELECT *
INTO Portfolio..BANHANG_201904
FROM Portfolio..BANHANG
WHERE YEAR(TRANS_DATE) = 2019 AND MONTH(TRANS_DATE) = 04

SELECT *
INTO Portfolio..BANHANG_201906
FROM Portfolio..BANHANG
WHERE YEAR(TRANS_DATE) = 2019 AND MONTH(TRANS_DATE) = 06

-- Sử dụng bảng bán hàng tháng 4 và 6 vừa tạo để tìm danh sách khách hàng có mua hàng trong tháng 4 nhưng không mua trong tháng 6 và ngược lại.
SELECT A.CUS_ID
FROM Portfolio..BANHANG_201904 A
LEFT JOIN Portfolio..BANHANG_201906 B
	ON A.CUS_ID = B.CUS_ID
WHERE B.CUS_ID IS NULL
UNION
SELECT A.CUS_ID
FROM Portfolio..BANHANG_201906 A
LEFT JOIN Portfolio..BANHANG_201904 B
	ON A.CUS_ID = B.CUS_ID
WHERE B.CUS_ID IS NULL

-- So sánh số tiền mua hàng của từng khách hàng trong tháng 4 và tháng 6.
SELECT
	ISNULL(A.CUS_ID, B.CUS_ID) CUS_ID,
	ISNULL(A.TOTAL_AMT_04,0) TOTAL_AMT_04,
	ISNULL(B.TOTAL_AMT_06,0) TOTAL_AMT_06,
	(ISNULL(B.TOTAL_AMT_06,0) - ISNULL(A.TOTAL_AMT_04,0)) [NET 06vs04]
FROM
(
SELECT 
	CUS_ID, 
	SUM(LCY_AMT) TOTAL_AMT_04
FROM MCI_test..BANHANG_201904
GROUP BY CUS_ID
) A
FULL JOIN
(
SELECT 
	CUS_ID, 
	SUM(LCY_AMT) TOTAL_AMT_06
FROM MCI_test..BANHANG_201906
GROUP BY CUS_ID
) B
ON A.CUS_ID = B.CUS_ID

-- Tính tổng số tiền tăng ròng của tháng 6 với tháng 4 của từng cửa hàng.
SELECT
	ISNULL(A.STOREDID, B.STOREDID) STOREDID,
	ISNULL(A.TOTAL_AMT_04,0) TOTAL_AMT_04,
	ISNULL(B.TOTAL_AMT_06,0) TOTAL_AMT_06,
	(ISNULL(B.TOTAL_AMT_06,0) - ISNULL(A.TOTAL_AMT_04,0)) [NET 06vs04] 
FROM
(
SELECT 
	STOREDID, 
	SUM(LCY_AMT) TOTAL_AMT_04
FROM Portfolio..BANHANG_201904
GROUP BY STOREDID
) A
FULL JOIN
(
SELECT 
	STOREDID,  
	SUM(LCY_AMT) TOTAL_AMT_06
FROM Portfolio..BANHANG_201906
GROUP BY STOREDID
) B
ON A.STOREDID = B.STOREDID

-- Lấy ra tổng số tiền giao dịch của từng cửa hàng trong năm 2019 và xem nó chiếm bao nhiêu % so với 
-- tổng số tiền giao dịch của từng cửa hang trong bảng bán hang.
SELECT 
	ISNULL(A.STOREDID, B.STOREDID) STOREDID,
	ISNULL(A.AMT_2019,0) AMT_2019,
	ISNULL(B.TOTAL_AMT,0) TOTAL_AMT,
	CAST((ISNULL(A.AMT_2019,0)/B.TOTAL_AMT)*100 AS DECIMAL(10,2)) [% AMT_2019]
FROM
(
SELECT 
	STOREDID,
	SUM(LCY_AMT) AMT_2019
FROM Portfolio..BANHANG
WHERE YEAR(TRANS_DATE) = 2019
GROUP BY STOREDID
) A
FULL JOIN 
(
SELECT 
	STOREDID,
	SUM(LCY_AMT) TOTAL_AMT
FROM Portfolio..BANHANG
GROUP BY STOREDID
) B
ON A.STOREDID = B.STOREDID
-- Lấy ra số tiền giao dịch lớn nhất của từng nhân viên với từng cửa hàng trong năm 2019 xem chiếm tỷ 
-- trọng bao nhiêu trên tổng giao dịch của nhân viên đó trong cửa hàng trong năm 2019
SELECT 
	ISNULL(A.SALE_ID, B.SALE_ID) SALE_ID,
	ISNULL(A.STOREDID, B.STOREDID) STOREDID,
	ISNULL(A.MAX_AMT,0) MAX_AMT,
	ISNULL(B.TOTAL_AMT,0) TOTAL_AMT,
	CAST((ISNULL(A.MAX_AMT,0)/B.TOTAL_AMT)*100 AS DECIMAL(10,2)) [% MAX_AMT]
FROM
(
SELECT
	STOREDID,
	SALE_ID,
	MAX(LCY_AMT) MAX_AMT
FROM Portfolio..BANHANG
WHERE YEAR(TRANS_DATE) = 2019
GROUP BY STOREDID, SALE_ID
) A
FULL JOIN 
(
SELECT
	STOREDID,
	SALE_ID,
	SUM(LCY_AMT) TOTAL_AMT
FROM Portfolio..BANHANG
WHERE YEAR(TRANS_DATE) = 2019
GROUP BY STOREDID, SALE_ID
) B
ON 
	A.SALE_ID = B.SALE_ID AND
	A.STOREDID = B.STOREDID
-- Tính tổng số tiền giao dịch của từng nhân viên với từng cửa hàng trong từng tháng năm 2019 xem chiếm 
-- tỷ trọng bao nhiêu trên tổng doanh thu của cửa hàng trong từng tháng đó của năm 2019
SELECT
	ISNULL(A.STOREDID,B.STOREDID) STOREDID,
	A.SALE_ID,
	ISNULL(A.[MONTH],B.[MONTH]) [MONTH],
	ISNULL(A.MONTH_AMT,0) MONTH_AMT,
	ISNULL(B.TOTAL_MONTH_AMT,0) TOTAL_MONTH_AMT,
	CAST((ISNULL(A.MONTH_AMT,0)/ISNULL(B.TOTAL_MONTH_AMT,0))*100 AS DECIMAL(10,4)) [% SALE_AMT]
FROM
(
SELECT
	STOREDID,
	SALE_ID,
	MONTH(TRANS_DATE) [MONTH],
	SUM(LCY_AMT) MONTH_AMT
FROM Portfolio..BANHANG
WHERE YEAR(TRANS_DATE) = 2019
GROUP BY
	STOREDID,
	SALE_ID,
	MONTH(TRANS_DATE)
) A
FULL JOIN
(
SELECT 
	STOREDID,
	MONTH(TRANS_DATE) [MONTH],
	SUM(LCY_AMT) TOTAL_MONTH_AMT
FROM Portfolio..BANHANG
WHERE YEAR(TRANS_DATE) = 2019
GROUP BY
	STOREDID,
	MONTH(TRANS_DATE)
) B
ON 
	A.STOREDID = B.STOREDID AND
	A.[MONTH] = B.[MONTH]
-- Update bảng Discount cột MucChietKhau = 0.01 nếu MucToiThieu từ 0 > 5, MucChietKhau = 0.02 nếu 
-- MucToiThieu từ 6 > 10, MucChietKhau = 0.03 nếu MucToiThieu từ 11 > 30 còn lại mức chiết khấu là 0.05
SELECT TOP 5 *
FROM Portfolio..DISCOUNT

UPDATE Portfolio..DISCOUNT 
SET MUC_CHIET_KHAU = 
	CASE
		WHEN MUC_TOI_THIEU BETWEEN 0 AND 5 THEN 0.01
		WHEN MUC_TOI_THIEU BETWEEN 6 AND 10 THEN 0.02
		WHEN MUC_TOI_THIEU BETWEEN 11 AND 30 THEN 0.03
		ELSE 0.05
	END